# generate_conversation.py

# the generate_coversation(prompt) function will generate a conversation between a doctor and a patient based on the information in the prompt and will return a JSON object that contains the conversation as generated by the OpenAI API.

# generate_conversation.py
import os, json
from openai import OpenAI

client = OpenAI(api_key=os.environ['OPENAI_API_KEY'])

def generate_conversation(prompt):

  response = client.chat.completions.create(
      model="gpt-4o-mini",
      messages=[{
          "role":
          "system",
          "content":
          "You are a medical training expert that creates conversations between doctors and patients for training situations. Create a conversation between a doctor and a patient that occurs in a doctors office. Make sure to indicate when the doctor is speaking by having 'üßë‚Äç‚öïÔ∏è Doctor Jane Smith' (or another fictional name) and 'ü§í Patient John Doe' (or another fictional name) above each line of diologe."
      }, {
          "role":
          "user",
          "content":
          "Please make sure that the conversation matches the specifications of this prompt shown here"
          + prompt
      }],
      response_format={
          "type": "json_schema",
          "json_schema": {
              "name": "conversation_schema",
              "schema": {
                  "type": "object",
                  "properties": {
                      "conversation": {
                          "type": "string",
                          "decription": "The conversation steps"
                      }
                  },
                  "required": ["conversation"],
                  "additionalProperties": False
              },
              "strict": True
          }
      })

  try:
    conversation = response.choices[0].message.content
    return json.loads(conversation)
  except Exception as e:
    return {"error": str(e)}
